/* Copyright (c) 2015, The Linux Foundation. All rights reserved.
 * Copyright (c) 2018, Robert Marko <robimarko@gmail.com>
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */

#include "qcom-ipq4019.dtsi"
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/soc/qcom,tcsr.h>

/ {
	model = "Linksys WHW03 V2 (Velop)";
	compatible = "qcom,ipq4019", "linksys,whw03v2";

	chosen {
		bootargs-append = " clk_ignore_unused";
	};

&expander0 {
	power_red@0 {
		label = "whw03v2:red:power";
		reg = <0x0>;
	};
	power_green@1 {
		label = "whw03v2:green:power";
		reg = <0x1>;
	};
	power_blue@2 {
		label = "whw03v2:blue:power";
		reg = <0x2>;
	};
	power_unused@3 {
		label = "whw03v2:unused:power";
		reg = <0x3>;
	};
};

	soc {
		rng@22000 {
			status = "okay";
		};


		ess-psgmii@98000 {
			status = "okay";
		};

		tcsr@1949000 {
			compatible = "qcom,tcsr";
			reg = <0x1949000 0x100>;
			qcom,wifi_glb_cfg = <TCSR_WIFI_GLB_CFG>;
		};

		tcsr@194b000 {
			/* select hostmode */
			compatible = "qcom,tcsr";
			reg = <0x194b000 0x100>;
			qcom,usb-hsphy-mode-select = <TCSR_USB_HSPHY_HOST_MODE>;
			status = "okay";
		};

		ess_tcsr@1953000 {
			compatible = "qcom,tcsr";
			reg = <0x1953000 0x1000>;
			qcom,ess-interface-select = <TCSR_ESS_PSGMII>;
		};

		tcsr@1957000 {
			compatible = "qcom,tcsr";
			reg = <0x1957000 0x100>;
			qcom,wifi_noc_memtype_m0_m2 = <TCSR_WIFI_NOC_MEMTYPE_M0_M2>;
		};

		serial@78af000 {
			pinctrl-0 = <&serial_0_pins>;
			pinctrl-names = "default";
			status = "okay";
		};

		crypto@8e3a000 {
			status = "okay";
		};

		watchdog@b017000 {
			status = "okay";
		};

		ess-switch@c000000 {
			status = "okay";
		};

		edma@c080000 {
			status = "okay";
		};

	};

	gpio-keys {
		compatible = "gpio-keys";

		reset {
			label = "reset";
			gpios = <&tlmm 12 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_RESTART >;
		};
	};
};

&mdio {
	status = "okay";
	pinctrl-0 = <&mdio_pins>;
	pinctrl-names = "default";
};

&tlmm {
	wifi0_pins: wifi0_pinmux {
		mux_1 {
			pins = "gpio37";
			output-high;
			function = "wcss0_dbg16";
			bias-pull-up;
			drive-strength = <0x6>;
		};
		mux_2 {
			pins = "gpio43";
			function = "wifi_wci1";
			bias-pull-up;
			drive-strength = <0x6>;
		};
		mux_3 {
			pins = "gpio52";
			output-high;
			function = "gpio";
			bias-pull-up;
			drive-strength = <0x6>;
		};`
	};

	serial_0_pins: serial0_pinmux {
		mux {
			pins = "gpio16", "gpio17";
			function = "blsp_uart0";
			bias-disable;
		};
	};

	serial_1_pins: serial1_pinmux {
		mux {
			pins = "gpio8", "gpio9";
			function = "blsp_uart1";
			bias-disable;
		};
	};

	uart_1_pins: uart1_pinmux {
		mux {
			pins = "gpio8", "gpio9", "gpio10", "gpio11";
			function = "blsp_uart1";
			bias-disable;
		};
	};

	i2c_0_pins: i2c_0_pinmux {
		pinmux {
			function = "blsp_i2c0";
			pins = "gpio20", "gpio21";
			bias-disable;
		};
	};

	spi_0_pins: spi_0_pinmux {
		mux {
			pins = "gpio12", "gpio13", "gpio14", "gpio15";
			function = "blsp_spi0";
			bias-disable;
		};
	};
	
	spi_1_pins: spi_1_pinmux {
		mux {
			pins = "gpio44", "gpio46", "gpio47";
			function = "blsp_spi1";
			bias-disable;
		};
		host_int {
			pins = "gpio42";
			function = "gpio";
			input;
		};
		cs {
			pins = "gpio45";
			function = "gpio";
			bias-pull-up;
		};
		wake {
			pins = "gpio31";
			function = "gpio";
			output-high;
		};
		reset {
			pins = "gpio49";
			function = "gpio";
			output-high;
		};
	};

	mdio_pins: mdio_pinmux {
		mux_1 {
			pins = "gpio6";
			function = "mdio";
			bias-pull-up;
		};
		mux_2 {
			pins = "gpio7";
			function = "mdc";
			bias-pull-up;
		};
	};
};

&blsp1_uart2 {
	status = "okay";
	pinctrl-0 = <&uart_1_pins>;
	pinctrl-1 = <&uart_1_pins>;

&pcie0 {
	status = "okay";
	perst-gpio = <&tlmm 38 GPIO_ACTIVE_LOW>;
	wake-gpio = <&tlmm 40 GPIO_ACTIVE_LOW>;
	clkreq-gpio = <&tlmm 39 GPIO_ACTIVE_LOW>;

	bridge@0,0 {
		reg = <0x00000000 0 0 0 0>;
		#size-cells = <2>;
		#address-cells = <3>;
		ranges;

		wifi2: wifi@1,0 {
			compatible = "qcom,ath10k";
			reg = <0x00010000 0 0 0 0>;
		};
	};
};

&vqmmc {
	status = "ok";
};

&blsp_dma {
	status = "okay";
};

&blsp1_spi1 {
	pinctrl-0 = <&spi_0_pins>;
	pinctrl-names = "default";
	status = "okay";
	m25p80@0 {
		#address-cells = <0x1>;
		#size-cells = <0x1>;
		reg = <0x0>;
		compatible = "n25q128a11";
		linux,modalias = "m25p80", "n25q128a11";
		spi-max-frequency = <0x16e3600>;
		use-default-sizes;
	};
};

&blsp1_spi2 {
	pinctrl-0 = <&spi_1_pins>;
	pinctrl-names = "default";
	status = "okay";
	spi@1 {
		compatible = "spidev";
		reg = <0x0>;
		spi-max-frequency = <0x16e3600>;
	};
	em358x@0 {
		compatible = "spidev";
		reg = <0x0>;
		spi-max-frequency = <0xb71b00>;
	};
};

&blsp1_i2c3 {
	pinctrl-0 = <&i2c_0_pins>;
	pinctrl-names = "default";

	status = "okay";

	expander0: pca9633@62 {
		compatible = "nxp,pca9633";
		#address-cells = <0x1>;
		#size-cells = <0x0>;
		reg = <0x62>;
		nxp,hw-blink;
	};
};

&cryptobam {
	status = "okay";
};

&wifi0 {
	status = "okay";
	pinctrl-0 = <&wifi0_pins>;
	pinctrol-names = "default";
	qcom,ath10k-calibration-variant = "linksys-whw03v2-fcc";
};

&wifi1 {
	status = "okay";
	ieee80211-freq-limit = <5170000 5330000>;
	qcom,ath10k-calibration-variant = "linksys-whw03v2-fcc";
};

&wifi2 {
	status = "okay";
	ieee80211-freq-limit = <5490000 5835000>;
	qcom,ath10k-calibration-variant = "linksys-whw03v2-fcc";
};
/*
&usb3_ss_phy {
	status = "okay";
};

&usb3_hs_phy {
	status = "okay";
};

&usb2_hs_phy {
	status = "okay";
};
*/
